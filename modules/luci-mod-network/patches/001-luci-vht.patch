diff --git a/feeds/luci/modules/luci-mod-network/patches/001-luci-vht.patch b/feeds/luci/modules/luci-mod-network/patches/001-luci-vht.patch
new file mode 100644
index 0000000000..79dc1a8706
--- /dev/null
+++ b/feeds/luci/modules/luci-mod-network/patches/001-luci-vht.patch
@@ -0,0 +1,57 @@
+--- a/htdocs/luci-static/resources/view/network/wireless.js
++++ b/htdocs/luci-static/resources/view/network/wireless.js
+@@ -372,7 +372,9 @@
+ 				'': [ '', '-', { available: true } ],
+ 				'n': [
+ 					'HT20', '20 MHz', { available: htmodelist.HT20 },
+-					'HT40', '40 MHz', { available: htmodelist.HT40 }
++					'HT40', '40 MHz', { available: htmodelist.HT40 },
++					'VHT20', '20 MHz QAM-256', { available: htmodelist.VHT20 },
++					'VHT40', '40 MHz QAM-256', { available: htmodelist.VHT40 }
+ 				],
+ 				'ac': [
+ 					'VHT20', '20 MHz', { available: htmodelist.VHT20 },
+@@ -504,20 +506,6 @@
+ 
+ 		this.setValues(mode, this.modes);
+ 
+-		// Determine mode based on htmode value
+-		if (/EHT20|EHT40|EHT80|EHT160|EHT320/.test(htval))
+-			mode.value = 'be';		
+-		else if (/HE20|HE40|HE80|HE160/.test(htval))
+-			mode.value = 'ax';
+-		else if (/VHT20|VHT40|VHT80|VHT160/.test(htval))
+-			mode.value = 'ac';
+-		else if (/HT20|HT40/.test(htval))
+-			mode.value = 'n';
+-		else
+-			mode.value = '';
+-
+-		this.toggleWifiMode(elem);
+-
+ 		if (hwval != null) {
+ 			this.useBandOption = false;
+ 
+@@ -536,6 +522,22 @@
+ 
+ 		this.toggleWifiBand(elem);
+ 
++		// Determine mode based on htmode value
++		if (/EHT20|EHT40|EHT80|EHT160|EHT320/.test(htval))
++			mode.value = 'be';
++		else if (/HE20|HE40|HE80|HE160/.test(htval))
++			mode.value = 'ax';
++		else if (/VHT20|VHT40/.test(htval) && band.value == '2g')
++			mode.value = 'n';
++		else if (/VHT20|VHT40|VHT80|VHT160/.test(htval))
++			mode.value = 'ac';
++		else if (/HT20|HT40/.test(htval))
++			mode.value = 'n';
++		else
++			mode.value = '';
++
++		this.toggleWifiMode(elem);
++
+ 		bwdt.value = htval;
+ 		chan.value = chval || (chan.options[0] ? chan.options[0].value : 'auto');
+ 
